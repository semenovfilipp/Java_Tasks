package Stepic.Return;
//Напишите функцию format_number, которая  будет принимать в качестве аргумента строку, которая должна содержать телефонный номер. И выводить его по образцу: 8 (987) 654-32-10.
//
//Телефонный номер должен состоять ровно из 11 цифр. Если в введённой строке больше или меньше символов, то функция должна вывести на экран "Неверное число символов".
//Если в номере встретится хотя бы один символ, который не является цифрой, то функция должна вывести на экран "Не все символы являются цифрами"
//Российские номера начинаются только с 8 (для простоты задачи). Если номер начинается не с 8, то функция должна вывести на экран "Это не российский номер телефона"
//Если с номером всё в порядке, то функция должна вывести на экран номер телефона по указанному выше образцу.
//Содержание функции main менять запрещено.
//
//Примечание: проверка условий должна выполняться в том же порядке, что и перечисленные выше условия. То есть, если в строке и не 11 символов и присутствует буква, то программа должна вывести: "Неверное число символов"

import java.util.Scanner;

public class Four {
    public static void main(String... args) {
        Scanner sc = new Scanner(System.in);
        String number = sc.nextLine();
        format_number(number);


    }

    public static void format_number(String number) {
        boolean flag = true;
        if (number.length() != 11) {
            System.out.println("Неверное число символов");
            return;
        }
        if (!number.matches("[0-9]+")) {
            System.out.println("Не все символы являются цифрами");
            return;

        }
        if (!number.startsWith("8")) {
            System.out.println("Это не российский номер телефона");
            return;

        }else {
        StringBuffer str = new StringBuffer(number);
        str.insert(1, " ");
        str.insert(2, "(");
        str.insert(6, ")");
        str.insert(7, " ");
        str.insert(11, "-");
        str.insert(14, "-");
            System.out.println(str);
        }
        return;
    }
}